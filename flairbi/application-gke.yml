# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
spring:
  profiles:
    active: dev
    include: swagger
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false # we use gulp + BrowserSync for livereload
  jackson:
    serialization.indent_output: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${POSTGRES_URI}/flairbi?ssl=false
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
    database: POSTGRESQL
    show-sql: true
    properties:
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: true

  mail:
    host: fakesmtp
    port: 25
    username:
    password:
  messages:
    cache-duration: 1
  thymeleaf:
    cache: false

  liquibase:
    contexts: prod
    drop-first: false

server:
  port: 8002
  use-forward-headers: true
security:
  oauth2:
    client:
      # From OIDC app
      clientId: ${OAUTH_CLIENT_ID}
      clientSecret: ${OAUTH_CLIENT_SECRET}
      # From Authorization Server's metadata
      accessTokenUri: ${OAUTH_ACCESS_TOKEN_URI}
      userAuthorizationUri: ${OAUTH_USER_AUTHORIZATION_URI}
      clientAuthenticationScheme: form
      scope: openid profile email
    resource:
      # from your Auth Server's metadata, check .well-known/openid-configuration
      # if not in .well-known/oauth-authorization-server
      userInfoUri: ${OAUTH_USER_INFO_URI}
      preferTokenInfo: false
# ===================================================================
# JHipster specific properties
# ===================================================================

jhipster:
  security:
    authentication:
      jwt:
        secret: my-secret-token-to-change-in-production
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
    rememberMe:
      # security key (this key should be unique for your application, and kept secret)
      key: 81703cb4a1c3099ecc374a94c5c4efe0717e078b
  mail: # specific JHipster mail property, for standard properties see MailProperties
    from: flairbi@localhost
    baseUrl: http://localhost:8002
  metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
    jmx.enabled: true
    graphite:
      enabled: false
      host: localhost
      port: 2003
      prefix: flairbi
    prometheus:
      enabled: true
      endpoint: /prometheus
    logs: # Reports Dropwizard metrics in the logs
      enabled: false
      reportFrequency: 60 # in seconds
  logging:
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queueSize: 512

# ===================================================================
# Application specific properties
# ===================================================================
application:
  ldap:
    url: ldap://localhost:10389
    base: dc=hawk,dc=com
    userDn: uid=admin,ou=system
    password: secret
# ===================================================================
# Images location
# note : please append the slash('/') at the end of folder as below
# for example : images then /
# ===================================================================
  image-upload:
    location: var/images/
    max-size-mb: 10
# ===================================================================
# files location
# note : please append the slash('/') at the end of folder as below
# for example : files then /
# ===================================================================
  storage-upload:
    location: storage/data/files/
    max-size-mb: 10

couchdb:
  password: ${COUCHDB_PASSWORD}
  username: ${COUCHDB_USERNAME}
  url: http://${COUCHDB_URI}
  test-connection-at-startup: false
  database-name: flairbi-view
  ssl-factory: com.flair.bi.ssl.FlairBIPgSqlSSLSocketFactory
  ssl-factory-arg: /app/ssl.properties
  enable-s-s-l: false

grpc:
  tls:
    root-certificate: src/main/resources/ssl/grpc/cloud/ca.crt

# ===================================================================
# vizualization-service-mode
# ===================================================================

vizualization-service-mode: grpc

#websocket message size
MAX_TEXT_MESSAGE_SIZE: 2048000

# ===================================================================
# Application scheduler configuration
# ===================================================================

flair-notifications:
  url: ${FLAIR_NOTIFICATIONS}
  host: http://flair-notifications
  port: 8080
  username: admin
  password: admin
  mail_body: This is a test email to check api functionality
  slack_API_Token: xoxp-338558815156-339648235094-401148640099-d844d7552f5b0081546729d997e92f52
  channel_id: C9ZK2705U
  stride_API_Token: uEkHqU5s2tsF6H13zK3p
  stride_cloud_id: 13f8bfc9-8748-4008-8b11-71f22aa84126
  stride_conversation_id: ff15d817-3ab3-417d-8ba6-2490b330a35f

flair-engine:
  url: ${FLAIR_ENGINE}
